name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  COLUMNS: 150
  UV_PYTHON: 3.12
  UV_FROZEN: "1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv sync --extra dev # install dev dependencies
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files --verbose
        env:
          SKIP: no-commit-to-branch

  # test:
  #   name: test py${{ matrix.python-version }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
  #   env:
  #     UV_PYTHON: ${{ matrix.python-version }}

    # runs-on: ubuntu-latest
    # steps:
    #   - uses: actions/checkout@v4
    #   - uses: astral-sh/setup-uv@v5
    #     with:
    #       enable-cache: true
    #   - run: uv sync
    #   - run: uv run pytest


  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  # deploy-web:
  #   needs: [check]
  #   if: "success() && github.ref == 'refs/heads/main'"
  #   runs-on: ubuntu-latest
  #   environment: cloudflare-deploy

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-node@v4

  #     - run: npm i
  #       working-directory: src/web

  #     - uses: cloudflare/wrangler-action@v3
  #       with:
  #         apiToken: ${{ secrets.cloudflare_api_token }}
  #         command: deploy --var GITHUB_SHA:${{ github.sha }}
  #         workingDirectory: src/web

  release:
    needs: [check]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    environment:
      name: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv build
      - run: uv publish --trusted-publishing always
